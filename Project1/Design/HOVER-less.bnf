<program> ::= <stmt_list>
<stmt_list> ::= <stmt>; | <stmt>; <stmt_list> | <if_stmt>; <stmt_list> | <comment><stmt_list>
<stmt> ::= <declare> | <assign> | <declare_assign> | <expr> | <loop> | <func_call> | <function_declare>  | <IO_stmt> | <primitive_func> 
<comment> ::= #<string># 
<declare> ::= <type><id_list>
<assign> ::= <id><assignment_op><expr> | <id><assignment_op><func_call>
<declare_assign> ::=  <constant_declare_assign> | <type><id> = <expr> 
<expr> ::= <id> | <literal> | <arithmetic_expr> | <logical_expr> | <update_expr>
<loop> ::= <for_loop> | <while_loop> | <dowhile_loop> | <times_loop>
<func_call> ::= <id>(<arguments>) | <id>()
<arguments> ::= <id_list> | <literal> | <id_list>,<arguments>  | <literal>,<arguments>
<function_declare> ::= <non_void_funtion_declare> | <void_function_declare>
<IO_stmt> ::= <input_stmt> | <output_stmt>
<primitive_func> ::= <inclination> | <altitude> | <temperature> | <acceleration> | <cam_control> | <timestamp> | <wifi> | <storage> | <battery> | <wait>
<type> ::= <primitive_type>
<primitive_type> ::= INT | FLT | CHR | BOL | STR
<literal> ::= <signed_int> | <float> | <char> | <string> | NULL
<char> ::= '<all_chars>' | ''
<string> ::= "<string_exp>" | ""
<string_exp> :: <all_chars> | <all_chars><string_exp> 
<signed_int> ::= <int> | <negative_int>
<negative_int> ::= -<int>
<int> ::= <digit> | <digit><int>
<float> ::= .<int> | <signed_int>.<int>
<id_list> ::= <id> | <id>,<id_list>
<id> ::= <normal_chars> | <normal_chars><id> | <id><digit>
<all_chars> ::= <normal_chars> | <special_chars> | <space> | <newline>
<constant_declare_assign> ::= CONSTANT <type><id> = <literal> 
<arithmetic_expr> ::= <arithmetic_expr> + <term> | <arithmetic_expr> - <term> | <term>
<term> ::= <term> * <sub_term> | <term> / <sub_term> | <sub_term>
<sub_term> ::= <term> ** <factor> | <term> % <factor> | <factor>
<factor> ::= ( <arithmetic_expr> ) | <id> | <literal>
<logical_expr> ::= <logical_expr> OR <logic_term> | <logic_term>
<logic_term> ::= <logic_term> AND <logic_factor> | <logic_factor>
<logic_factor> ::= (logical_expr) | !<logical_expr> | <id> | <literal>
<update_expr> ::= <increment> | <decrement>
<increment> ::= <id>++
<decrement> ::= <id>--
<conditional_expr> ::= <id> | <relational_exp> | <range_condition>
<range_condition> ::= <id><range_keyword><range_bound>,<range_bound> | <literal><range_keyword><range_bound>,<range_bound>
<range_bound> ::= <float> | <signed_int> | <id>
<relational_exp> ::= <expr><relational_op><expr>
<range_keyword> ::= WITHIN | OUTSIDE
<if_stmt> ::= <matched> | <unmatched>
<matched> ::= IF (<conditional_expr>) {<matched>} ELSE {<matched>} | <non_if_stmt>
<non_if_stmt> ::= <stmt>;<non_if_stmt> | <stmt>;
<unmatched> ::= IF (<conditional_expr>) {<stmt_list>} | IF (<conditional_expr>) {<matched>} ELSE {<unmatched>}
<for_loop> ::= FOR (<for_init>;<for_condition>;<for_update>) {<stmt_list>}
<for_init> ::=  <for_init>, <assign> | <for_init>, <declare> | <for_init>, <declare_assign> | <declare_assign> | <assign> | <declare> | 
<for_condition> ::= <conditional_expr>
<for_update> ::= <assignment> | <update_expr> | 
<while_loop> ::= WHILE (<expr>){<stmt_list>}
<times_loop> ::= TIMES (<positive_int>) {<stmt_list>} | TIMES (<id>) {<stmt_list>}
<dowhile_loop> ::= DO {<stmt_list>} WHILE (<expr>)
<while_condition> ::= <logical_expression> | <id> | <literal> | <conditional_expr>
<non_void_funtion_declare> ::= <type> FUNC <id>(<parameters>){<stmt_list><return_stmt>;} | <type> FUNC <id>(){<stmt_list><return_stmt>;} 
<void_function_declare> ::= VOID FUNC <id>(<parameters>){<stmt_list>} | VOID FUNC <id>(){<stmt_list>}
<parameters> ::= <parameter> | <parameter> , <parameters>
<parameter> ::= <type> <id>
<return_stmt> ::= RETURN <single_return> 
<single_return> ::= <expr> | <func_call>
<input_stmt> ::= <single_input> 
<single_input> ::= READ <id> 
<output_stmt> ::= WRITE <expr> | WRITE <conditional_expr>
<inclination> ::= GET_INC
<altitude> ::= GET_ALT
<temperature> ::= GET_TEMP
<acceleration> ::= GET_ACC
<cam_control> ::= <cam_on> | <cam_off> | <snap_picture>
<cam_on> ::= CAM_ON
<cam_off> ::= CAM_OFF
<snap_picture> ::= SNAP_PIC
<timestamp> ::= GET_TIME
<wifi> ::= CONNECT_BASE
<storage> ::= GET_CAPACITY
<battery> ::= GET_BATTERY
<wait> ::= WAIT <id> | WAIT <positive_int>
<relational_op> ::= <= | >= | < | > | == | !=
<assignment_op> ::= = | += | -= | *= | /= |**= | %=
<normal_chars> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|_
<special_chars> ::= ! | @ | # | \$ | % | ^ | & | * | ( | ) | + | = | / | * | - | ; | ' | " | ; | '|' | { | } | [ | ]
<digit> ::= 0|1|2|3|4|5|6|7|8|9
<newline> ::= \n
<bool> ::= <true> | <false>
<true> ::= TRUE | 1
<false> ::= FALSE | 0
<space> ::= ' '